{"ast":null,"code":"import * as PostsApi from \"../api/PostsRequests\";\nimport { deletePost } from \"../api/PostsRequests\";\nexport const getTimelinePosts = id => async dispatch => {\n  dispatch({\n    type: \"RETREIVING_START\"\n  });\n  try {\n    const {\n      data\n    } = await PostsApi.getTimelinePosts(id);\n    dispatch({\n      type: \"RETREIVING_SUCCESS\",\n      data: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"RETREIVING_FAIL\"\n    });\n  }\n};\nexport const deletePostById = (postId, userId) => async dispatch => {\n  try {\n    console.log(userId);\n    console.log(\"post deletion started\");\n    dispatch({\n      type: \"DELETE_POST_START\"\n    });\n    await deletePost(postId, userId);\n    dispatch({\n      type: \"DELETE_POST_SUCCESS\",\n      data: postId\n    });\n    console.log(\"post deleted\");\n  } catch (error) {\n    dispatch({\n      type: \"DELETE_POST_FAIL\",\n      error\n    });\n    console.log(\"post not deleted\", error.message);\n  }\n};","map":{"version":3,"names":["PostsApi","deletePost","getTimelinePosts","id","dispatch","type","data","error","console","log","deletePostById","postId","userId","message"],"sources":["C:/Users/D.Sinchan/Desktop/Accerlerlab/Accerlerlab/client/src/actions/PostsAction.js"],"sourcesContent":["import * as PostsApi from \"../api/PostsRequests\";\nimport { deletePost } from \"../api/PostsRequests\";\n\nexport const getTimelinePosts = (id) => async (dispatch) => {\n  dispatch({ type: \"RETREIVING_START\" });\n  try {\n    const { data } = await PostsApi.getTimelinePosts(id);\n    dispatch({ type: \"RETREIVING_SUCCESS\", data: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"RETREIVING_FAIL\" });\n  }\n};\n\n\n\n\n\nexport const deletePostById = (postId,userId) => async (dispatch) => {\n  try {\n    console.log(userId)\n    console.log(\"post deletion started\");\n    dispatch({ type: \"DELETE_POST_START\" });\n    await deletePost(postId,userId);\n\n    dispatch({ type: \"DELETE_POST_SUCCESS\", data: postId });\n    console.log(\"post deleted\");\n  } catch (error) {\n    dispatch({ type: \"DELETE_POST_FAIL\", error });\n    console.log(\"post not deleted\",error.message);\n  }\n};\n\n\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,sBAAsB;AAChD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EAC1DA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAmB,CAAC,CAAC;EACtC,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,QAAQ,CAACE,gBAAgB,CAACC,EAAE,CAAC;IACpDC,QAAQ,CAAC;MAAEC,IAAI,EAAE,oBAAoB;MAAEC,IAAI,EAAEA;IAAK,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBH,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAkB,CAAC,CAAC;EACvC;AACF,CAAC;AAMD,OAAO,MAAMK,cAAc,GAAGA,CAACC,MAAM,EAACC,MAAM,KAAK,MAAOR,QAAQ,IAAK;EACnE,IAAI;IACFI,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;IACnBJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCL,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAoB,CAAC,CAAC;IACvC,MAAMJ,UAAU,CAACU,MAAM,EAACC,MAAM,CAAC;IAE/BR,QAAQ,CAAC;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,IAAI,EAAEK;IAAO,CAAC,CAAC;IACvDH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC7B,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdH,QAAQ,CAAC;MAAEC,IAAI,EAAE,kBAAkB;MAAEE;IAAM,CAAC,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACF,KAAK,CAACM,OAAO,CAAC;EAC/C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}