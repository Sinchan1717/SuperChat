{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D.Sinchan\\\\Desktop\\\\Accerlerlab\\\\Accerlerlab\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../../actions/PostsAction\";\nimport Post from \"../Post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  let {\n    posts,\n    loading\n  } = useSelector(state => state.postReducer);\n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, []);\n  if (!posts) return 'No Posts';\n  if (params.id) posts = posts.filter(post => post.userId === params.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Posts\",\n    children: [posts.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        margin: \"0 auto\"\n      },\n      children: \"No posts added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : posts.map((post, id) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        data: post\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"vf648cwUkPLWnA778x29q3yTSg0=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","getTimelinePosts","Post","useSelector","useDispatch","useParams","Loader","jsxDEV","_jsxDEV","Posts","_s","params","dispatch","user","state","authReducer","authData","posts","loading","postReducer","_id","id","filter","post","userId","className","children","length","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","map","data","_c","$RefreshReg$"],"sources":["C:/Users/D.Sinchan/Desktop/Accerlerlab/Accerlerlab/client/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../../actions/PostsAction\";\nimport Post from \"../Post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\n\n\nconst Posts = () => {\n \n  const params = useParams()\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.authReducer.authData);\n  let { posts, loading } = useSelector((state) => state.postReducer);\n\n \n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, []);\n  if(!posts) return 'No Posts';\n\n  if(params.id) posts = posts.filter((post)=> post.userId===params.id)\n  return (\n    <div className=\"Posts\">\n\n      {posts.length === 0 && \n      <span style={{margin:\"0 auto\"}}>No posts added yet!</span>\n      } \n      {loading\n        ? <Loader/>\n        : posts.map((post, id) => {\n            return <Post data={post} key={id} />;\n          })}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,aAAa;AACpB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,QAAQ,CAAC;EACnE,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGf,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACK,WAAW,CAAC;EAGlEnB,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACX,gBAAgB,CAACY,IAAI,CAACO,GAAG,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACN,IAAG,CAACH,KAAK,EAAE,OAAO,UAAU;EAE5B,IAAGN,MAAM,CAACU,EAAE,EAAEJ,KAAK,GAAGA,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAGb,MAAM,CAACU,EAAE,CAAC;EACpE,oBACEb,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,GAEnBT,KAAK,CAACU,MAAM,KAAK,CAAC,iBACnBnB,OAAA;MAAMoB,KAAK,EAAE;QAACC,MAAM,EAAC;MAAQ,CAAE;MAAAH,QAAA,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEzDf,OAAO,gBACJV,OAAA,CAACF,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACThB,KAAK,CAACiB,GAAG,CAAC,CAACX,IAAI,EAAEF,EAAE,KAAK;MACtB,oBAAOb,OAAA,CAACN,IAAI;QAACiC,IAAI,EAAEZ;MAAK,GAAMF,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACtC,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3BID,KAAK;EAAA,QAEMJ,SAAS,EACPD,WAAW,EACXD,WAAW,EACHA,WAAW;AAAA;AAAAiC,EAAA,GALhC3B,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}